// Bintray setup stuff
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}

plugins {
    id 'java-library'
}
apply plugin: 'com.jfrog.bintray'
apply plugin: 'java-library'

// project details
group 'com.autoepm'
version '1.0.0'
ext.moduleName = 'com.autoepm.slf4j.jcdp'

sourceCompatibility = 8
targetCompatibility = 8

// dependencies
repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'org.slf4j:slf4j-api:1.8.0-beta4'
    // re-enable original when/if FilePrinter is accepted
    //compile group: 'com.diogonunes', name: 'JCDP', version: '2.0.3.1'
    compile 'com.diogonunes:jcdp:2.0.3.1'

}

sourceSets {
    moduleInfo {
        java {
            srcDir 'src/module-info/java'
        }
    }
}

// tasks

// packaging
jar {
    inputs.property("moduleName", moduleName)
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Automatic-Module-Name': moduleName
        )
    }
    // main is 8, moduleInfo is 9+
    from sourceSets.main.output
    from sourceSets.moduleInfo.output
}

// java8 target
compileJava {
    inputs.property("moduleName", moduleName)
        excludes = ['**/module-info.java']
}

// Java 9+ target
compileModuleInfoJava {
    sourceCompatibility = 9
    targetCompatibility = 9

    inputs.property("moduleName", moduleName)
    doFirst {
        classpath += sourceSets.main.compileClasspath
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '-d', sourceSets.main.output.classesDirs.asPath
        ]
    }
}

javadoc {
    if (!JavaVersion.toVersion(targetCompatibility).isJava9Compatible()) {
        excludes = ['**/module-info.java']
    }
}

compileTestJava{
    // if you want to see warnings...
    // options.compilerArgs << '-Xlint:unchecked'
    if (!JavaVersion.toVersion(targetCompatibility).isJava9Compatible()) {
        excludes = ['**/module-info.java']
    }
}
